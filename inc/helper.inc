; Generated by HeaderConvert
.code
ifndef __HELPER_INC__
__HELPER_INC__:

bwPtr EQU <QWORD>
bwFunc EQU <QWORD>

; Typedefs

; Enums

; Functions
; pPool:bwPool *, elementSize:size_t, capacity:size_t
bwPool_Init PROTO

; pPool:bwPool *, index:size_t
bwPool_Get PROTO

; pPool:bwPool *
bwPool_Add PROTO

; pPool:bwPool *, index:size_t
bwPool_Remove PROTO

; pPool:bwPool *, newSize:size_t
bwPool_Truncate PROTO

; path:char const *
bwLoadSprite PROTO

; data:bwWorldData *
bwProcessEvents PROTO

; p1:b2Vec2, p2:b2Vec2, radius:float, color:b2HexColor, context:void *
bwDrawSolidCapsule PROTO

; pPool:bwPool *, body:b2BodyId
bwEntity_CreateDefault PROTO

; pPool:bwPool *, world:b2WorldId, pos:b2Vec2, lifeSpan:float
bwEntity_CreateParticle PROTO

; entity:bwEntity *
bwEntity_Destroy PROTO

; entity:bwEntity *, damage:float
bwEntity_ApplyDamage PROTO

; entity:bwEntity *, dt:float, pWindow:sfRenderWindow *, pRenderState:sfRenderStates *
bwEntity_Update PROTO

; data:bwWorldData *
bwEntity_UpdateAll PROTO

; body:b2BodyId
bwEntity_GetFromBody PROTO

; entity:bwEntity *
bwEntity_Validate PROTO

; entity:bwEntity *
bwEntity_Kill PROTO


; Structs
bwPool STRUCT 16
	first bwPtr ?	; void *
	elementSize size_t ?
	_size size_t ?
	capacity size_t ?
	recycledIndices bwPtr ?	; size_t *
	recycledCount size_t ?
bwPool ENDS

bwWorldData STRUCT 16
	timeStep float ?
	worldId b2WorldId <>
	pWindow bwPtr ?	; sfRenderWindow *
	pView bwPtr ?	; sfView *
	pRenderStates bwPtr ?	; sfRenderStates *
	pEntityPool bwPtr ?	; bwPool *
	pParticlePool bwPtr ?	; bwPool *
bwWorldData ENDS

bwEntity STRUCT 16
	body b2BodyId <>
	pSprite bwPtr ?	; sfSprite *
	health float ?
	timeLeft float ?
	hardness float ?
	explosionStrength float ?
	explosionParts uint32_t ?
	index size_t ?
	pPool bwPtr ?	; bwPool *
bwEntity ENDS


endif
